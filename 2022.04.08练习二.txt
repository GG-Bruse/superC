/*
泰波那契序列 Tn 定义如下： 

T0 = 0, T1 = 1, T2 = 1, 且在 n >= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2

给你整数 n，请返回第 n 个泰波那契数 Tn 的值。
*/
//#include<iostream>
//using namespace std;
//class Solution
//{
//public:
//    int tribonacci(int n)
//    {
//        if (n < 2)
//        {
//            return n;
//        }
//        int left = 0,mid = 1,right = 1;
//        for (int i = 3; i <= n; ++i)
//        {
//            int temp1 = right;
//            int temp2 = mid;
//            right = left + mid + right;
//            mid = temp1;
//            left = temp2;
//        }
//        return right;
//    }
//};
//int main()
//{
//    Solution s;
//    cout<<s.tribonacci(4);
//	return 0;
//}










/*
给定一个字符串 s ，找到 它的第一个不重复的字符，并返回它的索引 。如果不存在，则返回 -1 。
s只包含小写字母
*/

//超过时间限制(目前所知方法)
//#include<iostream>
//#include<string>
//using namespace std;
//class Solution
//{
//public:
//    int firstUniqChar(string s)
//    {
//        int size = s.size();
//        for (int i = 0; i < size; ++i)
//        {
//            int count = 0;
//            for (int j = 0; j < size; ++j)
//            {
//                if (s[i] == s[j])
//                {
//                    ++count;
//                    continue;
//                }
//            }
//            if (count == 1)
//            {
//                return i;
//            }
//        }
//        return -1;
//    }
//};
//int main()
//{
//    string str = "loveleetcode";
//    Solution s;
//    cout<<s.firstUniqChar(str);
//	return 0;
//}