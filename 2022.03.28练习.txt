/*
猜数字游戏的规则如下：

每轮游戏，我都会从 1 到 n 随机选择一个数字。 请你猜选出的是哪个数字。
如果你猜错了，我会告诉你，你猜测的数字比我选出的数字是大了还是小了。
你可以通过调用一个预先定义好的接口 int guess(int num) 来获取猜测结果，返回值一共有 3 种可能的情况（-1，1 或 0）：

-1：我选出的数字比你猜的数字小 pick < num
1：我选出的数字比你猜的数字大 pick > num
0：我选出的数字和你猜的数字一样。恭喜！你猜对了！pick == num
返回我选出的数字。
*/


//二分查找法
//#include<iostream>
//using namespace std;
//int guess(int num);
//class Solution
//{
//public:
//    int guessNumber(int n)
//    {
//        long long mid = n / 2;
//        long long left = 1, right = n;
//        while (left <= right)
//        {
//            if (guess(mid) == 0)
//            {
//                return mid;
//            }
//            else if (guess(mid) == -1)
//            {
//                right = mid - 1;
//                mid = (left + right) / 2;
//            }
//            else if (guess(mid) == 1)
//            {
//                left = mid + 1;
//                mid = (left + right) / 2;
//            }
//        }
//        return -1;
//    }
//};











/*
给你一个整数 n，请你判断该整数是否是 2 的幂次方。如果是，返回 true ；否则，返回 false 。

如果存在一个整数 x 使得 n == 2x ，则认为 n 是 2 的幂次方。

-231 <= n <= 231 - 1

2^30=1,073,741,824
*/

//#include<iostream>
//using namespace std;
//class Solution
//{
//public:
//    bool isPowerOfTwo(int n)
//    {
//        if (n>0 && 1073741824 % n == 0)
//        {
//            return true;
//        }
//        return false;
//    }
//};
//int main()
//{
//    Solution s;
//    cout<<s.isPowerOfTwo(0);
//    return 0;
//}