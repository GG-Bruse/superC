/*
栈:
一种特殊的线性表(受限线性表)，其只允许在固定的一端进行插入和删除元素操作。
进行数据插入和删除操作的一端称为栈顶，另一端称为栈底。
栈中的数据元素遵守后进先出LIFO(Last In First Out)原则。

压栈:栈的插入操作被称为进栈/压栈/入栈，入数据在栈顶
出栈:栈的删除操作被称为出栈，出数据在栈顶 
*/ 

/*
利用数组和链表都可实现栈
1.数组:(更优) 
数组尾当作栈顶，数组头作栈底。栈顶需频繁插入删除，使用数组尾可避免数据挪动。
缺陷:栈空间不足时的扩容及其扩容后空间的浪费
2.链表:
(单链表)链表头作栈顶，链表尾作栈底。栈顶需频繁插入删除，使用链表头可避免频繁遍历寻找尾节点。
(双向循环链表)链表头、链表尾作栈顶都可 
*/




#include<stdio.h>
typedef int SKDataType; 
struct stack
{
	SKDataType* data;
	
};
int main()
{
	
	return 0; 
} 
