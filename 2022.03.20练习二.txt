
/*
数组nums包含从0到n的所有整数，但其中缺了一个。请编写代码找出那个缺失的整数。你有办法在O(n)时间内完成吗？
*/
//#include<vector>
//#include<iostream>
//#include<algorithm>
//using namespace std;
//class Solution {
//public:
//    int missingNumber(vector<int>& nums) {
//        sort(nums.begin(), nums.end());
//        for (int i = 0; i <= nums.size(); i++)
//        {
//            if (i != nums.size() && nums[i] == i)
//            {
//                continue;
//            }
//            else
//            {
//                return i;
//            }
//        }
//        return 1;
//    }
//};
//int main()
//{
//    vector<int>v;
//    v.push_back(3);
//    v.push_back(0);
//    v.push_back(1);
//    Solution s;
//    cout<<s.missingNumber(v);//2
//    return 0;
//}

















/*
给你一个 下标从 0 开始 的整数数组 nums ，其中 nums[i] 表示第 i 名学生的分数。另给你一个整数 k 。

从数组中选出任意 k 名学生的分数，使这 k 个分数间 最高分 和 最低分 的 差值 达到 最小化 。

返回可能的 最小差值 。
*/
//class Solution
//{
//public:
//    int minimumDifference(vector<int>& nums, int k)
//    {
//        sort(nums.begin(), nums.end());
//        int mindifferent = INT_MAX;
//        for (int i = 0; i < nums.size() - k + 1; i++)
//        {
//            mindifferent = mindifferent < nums[i + k - 1] - nums[i] ? mindifferent : nums[i + k - 1] - nums[i];
//        }
//        return mindifferent;
//    }
//};




